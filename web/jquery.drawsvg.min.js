!function(t){"function"==typeof define&&define.amd?define(["jquery"],t):"object"==typeof module&&module.exports?module.exports=function(e,n){return void 0===n&&(n="undefined"!=typeof window?require("jquery"):require("jquery")(e)),t(n),n}:t(jQuery)}(function(t){"use strict";var e,n="drawsvg",a={duration:1e3,stagger:200,easing:"swing",reverse:!1,callback:t.noop},o=((e=function(e,o){var i=this,r=t.extend(a,o);i.$elm=t(e),i.options=r,i.$paths=i.$elm.find("path"),i.totalDuration=r.duration+r.stagger*i.$paths.length,i.duration=r.duration/i.totalDuration,i.$paths.each(function(t,e){var n=e.getTotalLength();e.pathLen=n,e.delay=r.stagger*t/i.totalDuration,e.style.strokeDasharray=[n,n].join(" "),e.style.strokeDashoffset=n}),i.$elm.attr("class",function(t,e){return[e,n+"-initialized"].join(" ")})}).prototype.getVal=function(e,n){return 1-t.easing[n](e,e,0,1,1)},e.prototype.progress=function(t){var e=this,n=e.options,a=e.duration;e.$paths.each(function(o,i){var r=i.style;if(1===t)r.strokeDashoffset=0;else if(0===t)r.strokeDashoffset=i.pathLen+"px";else if(t>=i.delay&&t<=a+i.delay){var s=(t-i.delay)/a;r.strokeDashoffset=e.getVal(s,n.easing)*i.pathLen*(n.reverse?-1:1)+"px"}})},e.prototype.animate=function(){var e=this;e.$elm.attr("class",function(t,e){return[e,n+"-animating"].join(" ")}),t({len:0}).animate({len:1},{easing:"linear",duration:e.totalDuration,step:function(t,n){e.progress.call(e,t/n.end)},complete:function(){e.options.callback.call(this),e.$elm.attr("class",function(t,e){return e.replace(n+"-animating","")})}})},e);t.fn[n]=function(e,a){return this.each(function(){var i=t.data(this,n);i&&""+e===e&&i[e]?i[e](a):t.data(this,n,new o(this,e))})}});